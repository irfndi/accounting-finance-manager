import { z } from "zod";
/**
 * Raw Documents - Stores extracted text from uploaded documents for OCR processing
 * Links uploaded files in R2 storage with their extracted text content
 */
export declare const rawDocs: import("drizzle-orm/sqlite-core").SQLiteTableWithColumns<{
    name: "raw_docs";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "id";
            tableName: "raw_docs";
            dataType: "number";
            columnType: "SQLiteInteger";
            data: number;
            driverParam: number;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        fileId: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "file_id";
            tableName: "raw_docs";
            dataType: "string";
            columnType: "SQLiteText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: number | undefined;
        }>;
        originalName: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "original_name";
            tableName: "raw_docs";
            dataType: "string";
            columnType: "SQLiteText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: number | undefined;
        }>;
        mimeType: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "mime_type";
            tableName: "raw_docs";
            dataType: "string";
            columnType: "SQLiteText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: number | undefined;
        }>;
        fileSize: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "file_size";
            tableName: "raw_docs";
            dataType: "number";
            columnType: "SQLiteInteger";
            data: number;
            driverParam: number;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        r2Key: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "r2_key";
            tableName: "raw_docs";
            dataType: "string";
            columnType: "SQLiteText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: number | undefined;
        }>;
        r2Bucket: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "r2_bucket";
            tableName: "raw_docs";
            dataType: "string";
            columnType: "SQLiteText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: number | undefined;
        }>;
        extractedText: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "extracted_text";
            tableName: "raw_docs";
            dataType: "string";
            columnType: "SQLiteText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: number | undefined;
        }>;
        textLength: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "text_length";
            tableName: "raw_docs";
            dataType: "number";
            columnType: "SQLiteInteger";
            data: number;
            driverParam: number;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        ocrConfidence: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "ocr_confidence";
            tableName: "raw_docs";
            dataType: "number";
            columnType: "SQLiteReal";
            data: number;
            driverParam: number;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        ocrProcessingTime: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "ocr_processing_time";
            tableName: "raw_docs";
            dataType: "number";
            columnType: "SQLiteReal";
            data: number;
            driverParam: number;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        ocrStatus: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "ocr_status";
            tableName: "raw_docs";
            dataType: "string";
            columnType: "SQLiteText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: number | undefined;
        }>;
        ocrErrorMessage: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "ocr_error_message";
            tableName: "raw_docs";
            dataType: "string";
            columnType: "SQLiteText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: number | undefined;
        }>;
        ocrErrorCode: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "ocr_error_code";
            tableName: "raw_docs";
            dataType: "string";
            columnType: "SQLiteText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: number | undefined;
        }>;
        ocrFallbackUsed: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "ocr_fallback_used";
            tableName: "raw_docs";
            dataType: "boolean";
            columnType: "SQLiteBoolean";
            data: boolean;
            driverParam: number;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        ocrRetryable: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "ocr_retryable";
            tableName: "raw_docs";
            dataType: "boolean";
            columnType: "SQLiteBoolean";
            data: boolean;
            driverParam: number;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        ocrMaxRetries: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "ocr_max_retries";
            tableName: "raw_docs";
            dataType: "number";
            columnType: "SQLiteInteger";
            data: number;
            driverParam: number;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        ocrProcessedAt: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "ocr_processed_at";
            tableName: "raw_docs";
            dataType: "date";
            columnType: "SQLiteTimestamp";
            data: Date;
            driverParam: number;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        documentType: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "document_type";
            tableName: "raw_docs";
            dataType: "string";
            columnType: "SQLiteText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: number | undefined;
        }>;
        category: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "category";
            tableName: "raw_docs";
            dataType: "string";
            columnType: "SQLiteText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: number | undefined;
        }>;
        tags: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "tags";
            tableName: "raw_docs";
            dataType: "string";
            columnType: "SQLiteText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: number | undefined;
        }>;
        structuredData: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "structured_data";
            tableName: "raw_docs";
            dataType: "string";
            columnType: "SQLiteText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: number | undefined;
        }>;
        llmConfidence: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "llm_confidence";
            tableName: "raw_docs";
            dataType: "number";
            columnType: "SQLiteReal";
            data: number;
            driverParam: number;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        llmProcessedAt: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "llm_processed_at";
            tableName: "raw_docs";
            dataType: "date";
            columnType: "SQLiteTimestamp";
            data: Date;
            driverParam: number;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        uploadedBy: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "uploaded_by";
            tableName: "raw_docs";
            dataType: "string";
            columnType: "SQLiteText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: number | undefined;
        }>;
        description: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "description";
            tableName: "raw_docs";
            dataType: "string";
            columnType: "SQLiteText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: number | undefined;
        }>;
        searchableText: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "searchable_text";
            tableName: "raw_docs";
            dataType: "string";
            columnType: "SQLiteText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: number | undefined;
        }>;
        entityId: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "entity_id";
            tableName: "raw_docs";
            dataType: "string";
            columnType: "SQLiteText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: number | undefined;
        }>;
        createdAt: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "created_at";
            tableName: "raw_docs";
            dataType: "date";
            columnType: "SQLiteTimestamp";
            data: Date;
            driverParam: number;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: true;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "updated_at";
            tableName: "raw_docs";
            dataType: "date";
            columnType: "SQLiteTimestamp";
            data: Date;
            driverParam: number;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: true;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        createdBy: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "created_by";
            tableName: "raw_docs";
            dataType: "string";
            columnType: "SQLiteText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: number | undefined;
        }>;
        updatedBy: import("drizzle-orm/sqlite-core").SQLiteColumn<{
            name: "updated_by";
            tableName: "raw_docs";
            dataType: "string";
            columnType: "SQLiteText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: number | undefined;
        }>;
    };
    dialect: "sqlite";
}>;
export declare const OCRStatus: {
    readonly PENDING: "PENDING";
    readonly PROCESSING: "PROCESSING";
    readonly COMPLETED: "COMPLETED";
    readonly FAILED: "FAILED";
};
export declare const DocumentType: {
    readonly AUTO_DETECTED: "AUTO_DETECTED";
    readonly RECEIPT: "RECEIPT";
    readonly INVOICE: "INVOICE";
    readonly BANK_STATEMENT: "BANK_STATEMENT";
    readonly CONTRACT: "CONTRACT";
    readonly REPORT: "REPORT";
    readonly OTHER: "OTHER";
};
export declare const insertRawDocSchema: z.ZodObject<{
    id: z.ZodOptional<z.ZodNumber>;
    fileId: z.ZodString;
    originalName: z.ZodString;
    mimeType: z.ZodString;
    fileSize: z.ZodNumber;
    r2Key: z.ZodString;
    r2Bucket: z.ZodOptional<z.ZodString>;
    extractedText: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    textLength: z.ZodOptional<z.ZodNumber>;
    ocrConfidence: z.ZodOptional<z.ZodNullable<z.ZodOptional<z.ZodNumber>>>;
    ocrProcessingTime: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    ocrStatus: z.ZodOptional<z.ZodEnum<["PENDING", "PROCESSING", "COMPLETED", "FAILED"]>>;
    ocrErrorMessage: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    ocrErrorCode: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    ocrFallbackUsed: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    ocrRetryable: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    ocrMaxRetries: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    ocrProcessedAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    documentType: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    category: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    tags: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    structuredData: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    llmConfidence: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    llmProcessedAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    uploadedBy: z.ZodString;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    searchableText: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    entityId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    createdAt: z.ZodOptional<z.ZodDate>;
    updatedAt: z.ZodOptional<z.ZodDate>;
    createdBy: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    updatedBy: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, z.UnknownKeysParam, z.ZodTypeAny, {
    fileId: string;
    originalName: string;
    mimeType: string;
    fileSize: number;
    r2Key: string;
    uploadedBy: string;
    id?: number | undefined;
    r2Bucket?: string | undefined;
    extractedText?: string | null | undefined;
    textLength?: number | undefined;
    ocrConfidence?: number | null | undefined;
    ocrProcessingTime?: number | null | undefined;
    ocrStatus?: "PENDING" | "PROCESSING" | "COMPLETED" | "FAILED" | undefined;
    ocrErrorMessage?: string | null | undefined;
    ocrErrorCode?: string | null | undefined;
    ocrFallbackUsed?: boolean | null | undefined;
    ocrRetryable?: boolean | null | undefined;
    ocrMaxRetries?: number | null | undefined;
    ocrProcessedAt?: Date | null | undefined;
    documentType?: string | null | undefined;
    category?: string | null | undefined;
    tags?: string | null | undefined;
    structuredData?: string | null | undefined;
    llmConfidence?: number | null | undefined;
    llmProcessedAt?: Date | null | undefined;
    description?: string | null | undefined;
    searchableText?: string | null | undefined;
    entityId?: string | null | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    createdBy?: string | null | undefined;
    updatedBy?: string | null | undefined;
}, {
    fileId: string;
    originalName: string;
    mimeType: string;
    fileSize: number;
    r2Key: string;
    uploadedBy: string;
    id?: number | undefined;
    r2Bucket?: string | undefined;
    extractedText?: string | null | undefined;
    textLength?: number | undefined;
    ocrConfidence?: number | null | undefined;
    ocrProcessingTime?: number | null | undefined;
    ocrStatus?: "PENDING" | "PROCESSING" | "COMPLETED" | "FAILED" | undefined;
    ocrErrorMessage?: string | null | undefined;
    ocrErrorCode?: string | null | undefined;
    ocrFallbackUsed?: boolean | null | undefined;
    ocrRetryable?: boolean | null | undefined;
    ocrMaxRetries?: number | null | undefined;
    ocrProcessedAt?: Date | null | undefined;
    documentType?: string | null | undefined;
    category?: string | null | undefined;
    tags?: string | null | undefined;
    structuredData?: string | null | undefined;
    llmConfidence?: number | null | undefined;
    llmProcessedAt?: Date | null | undefined;
    description?: string | null | undefined;
    searchableText?: string | null | undefined;
    entityId?: string | null | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    createdBy?: string | null | undefined;
    updatedBy?: string | null | undefined;
}>;
export declare const updateRawDocSchema: z.ZodObject<Omit<{
    id: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
    fileId: z.ZodOptional<z.ZodString>;
    originalName: z.ZodOptional<z.ZodString>;
    mimeType: z.ZodOptional<z.ZodString>;
    fileSize: z.ZodOptional<z.ZodNumber>;
    r2Key: z.ZodOptional<z.ZodString>;
    r2Bucket: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    extractedText: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodString>>>;
    textLength: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
    ocrConfidence: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodOptional<z.ZodNumber>>>>;
    ocrProcessingTime: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodNumber>>>;
    ocrStatus: z.ZodOptional<z.ZodOptional<z.ZodEnum<["PENDING", "PROCESSING", "COMPLETED", "FAILED"]>>>;
    ocrErrorMessage: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodString>>>;
    ocrErrorCode: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodString>>>;
    ocrFallbackUsed: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodBoolean>>>;
    ocrRetryable: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodBoolean>>>;
    ocrMaxRetries: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodNumber>>>;
    ocrProcessedAt: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodDate>>>;
    documentType: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodString>>>;
    category: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodString>>>;
    tags: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodString>>>;
    structuredData: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodString>>>;
    llmConfidence: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodNumber>>>;
    llmProcessedAt: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodDate>>>;
    uploadedBy: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodString>>>;
    searchableText: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodString>>>;
    entityId: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodString>>>;
    createdAt: z.ZodOptional<z.ZodOptional<z.ZodDate>>;
    updatedAt: z.ZodOptional<z.ZodOptional<z.ZodDate>>;
    createdBy: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodString>>>;
    updatedBy: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodString>>>;
}, "id" | "fileId" | "createdAt" | "createdBy">, z.UnknownKeysParam, z.ZodTypeAny, {
    originalName?: string | undefined;
    mimeType?: string | undefined;
    fileSize?: number | undefined;
    r2Key?: string | undefined;
    r2Bucket?: string | undefined;
    extractedText?: string | null | undefined;
    textLength?: number | undefined;
    ocrConfidence?: number | null | undefined;
    ocrProcessingTime?: number | null | undefined;
    ocrStatus?: "PENDING" | "PROCESSING" | "COMPLETED" | "FAILED" | undefined;
    ocrErrorMessage?: string | null | undefined;
    ocrErrorCode?: string | null | undefined;
    ocrFallbackUsed?: boolean | null | undefined;
    ocrRetryable?: boolean | null | undefined;
    ocrMaxRetries?: number | null | undefined;
    ocrProcessedAt?: Date | null | undefined;
    documentType?: string | null | undefined;
    category?: string | null | undefined;
    tags?: string | null | undefined;
    structuredData?: string | null | undefined;
    llmConfidence?: number | null | undefined;
    llmProcessedAt?: Date | null | undefined;
    uploadedBy?: string | undefined;
    description?: string | null | undefined;
    searchableText?: string | null | undefined;
    entityId?: string | null | undefined;
    updatedAt?: Date | undefined;
    updatedBy?: string | null | undefined;
}, {
    originalName?: string | undefined;
    mimeType?: string | undefined;
    fileSize?: number | undefined;
    r2Key?: string | undefined;
    r2Bucket?: string | undefined;
    extractedText?: string | null | undefined;
    textLength?: number | undefined;
    ocrConfidence?: number | null | undefined;
    ocrProcessingTime?: number | null | undefined;
    ocrStatus?: "PENDING" | "PROCESSING" | "COMPLETED" | "FAILED" | undefined;
    ocrErrorMessage?: string | null | undefined;
    ocrErrorCode?: string | null | undefined;
    ocrFallbackUsed?: boolean | null | undefined;
    ocrRetryable?: boolean | null | undefined;
    ocrMaxRetries?: number | null | undefined;
    ocrProcessedAt?: Date | null | undefined;
    documentType?: string | null | undefined;
    category?: string | null | undefined;
    tags?: string | null | undefined;
    structuredData?: string | null | undefined;
    llmConfidence?: number | null | undefined;
    llmProcessedAt?: Date | null | undefined;
    uploadedBy?: string | undefined;
    description?: string | null | undefined;
    searchableText?: string | null | undefined;
    entityId?: string | null | undefined;
    updatedAt?: Date | undefined;
    updatedBy?: string | null | undefined;
}>;
export type RawDoc = typeof rawDocs.$inferSelect;
export type NewRawDoc = typeof rawDocs.$inferInsert;
export type UpdateRawDoc = z.infer<typeof updateRawDocSchema>;
export type UpdateOCRData = Pick<RawDoc, 'ocrStatus' | 'extractedText' | 'textLength' | 'ocrConfidence' | 'ocrProcessingTime' | 'ocrErrorMessage' | 'ocrErrorCode' | 'ocrFallbackUsed' | 'ocrRetryable' | 'ocrProcessedAt' | 'searchableText' | 'ocrMaxRetries'>;
//# sourceMappingURL=documents.d.ts.map